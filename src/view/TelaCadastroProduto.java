/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ESCRITORIO
 */
public class TelaCadastroProduto extends javax.swing.JFrame {

    /**
     * Creates new form TelaListaClientes
     */
    public TelaCadastroProduto() {
        initComponents();
        
        DefaultTableModel modelo = (DefaultTableModel) jtProdutos.getModel();
        jtProdutos.setRowSorter(new TableRowSorter(modelo));
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtDescricao = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCadastrar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");
        setResizable(false);

        txtPreco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecoKeyPressed(evt);
            }
        });

        jLabel1.setText("Descrição");

        jLabel2.setText("Quantidade");

        jLabel3.setText("Preço");

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.setEnabled(false);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jtProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIÇÃO", "QUANTIDADE", "PREÇO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProdutos.getTableHeader().setReorderingAllowed(false);
        jtProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtProdutosMouseReleased(evt);
            }
        });
        jtProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtProdutosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtProdutos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadastrar)
                        .addGap(33, 33, 33)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(btnAtualizar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtDescricao))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnExcluir)
                    .addComponent(btnAtualizar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        DefaultTableModel dtmProdutos = (DefaultTableModel) jtProdutos.getModel();
        if (txtDescricao.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe uma descrição para o produto");
            txtDescricao.requestFocus();
        } else if (txtQuantidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe a quantidade de " + txtDescricao.getText() + " a ser cadastrada.");
            txtQuantidade.requestFocus();
        } else if (txtPreco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Informe um preço para o produto");
            txtPreco.requestFocus();
        } else {
            Object[] dados = {
                txtDescricao.getText(),
                txtQuantidade.getText(),
                txtPreco.getText()
            };
            try {
                dtmProdutos.addRow(dados);
                txtDescricao.setText(null);
                txtQuantidade.setText(null);
                txtPreco.setText(null);
                txtDescricao.requestFocus();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar adicionar o item.\n" + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        Integer itemSelecionado = jtProdutos.getSelectedRow();
        DefaultTableModel dtmProdutos = (DefaultTableModel) jtProdutos.getModel();

        if (itemSelecionado == -1) {
            JOptionPane.showMessageDialog(null, "Nenhum produto selecionado!");
        } else {
            dtmProdutos.removeRow(itemSelecionado);
            if (dtmProdutos.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Todos os itens foram excluídos!");
                txtDescricao.setText(null);
                txtQuantidade.setText(null);
                txtPreco.setText(null);
                txtDescricao.requestFocus();
                btnExcluir.setEnabled(false);
                btnAtualizar.setEnabled(false);
                btnCancelar.setEnabled(false);
            }
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtPrecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jtProdutos.getSelectedRow() != -1) {
                DefaultTableModel dtmProdutos = (DefaultTableModel) jtProdutos.getModel();
                if (txtDescricao.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe uma descrição para o produto");
                    txtDescricao.requestFocus();
                } else if (txtQuantidade.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe a quantidade de " + txtDescricao.getText() + " a ser cadastrada.");
                    txtQuantidade.requestFocus();
                } else if (txtPreco.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe um preço para o produto");
                    txtPreco.requestFocus();
                } else {
                    Object[] dados = {
                        txtDescricao.getText(),
                        txtQuantidade.getText(),
                        txtPreco.getText()
                    };
                    try {
                        jtProdutos.setValueAt(dados[0], jtProdutos.getSelectedRow(), 0);
                        jtProdutos.setValueAt(dados[1], jtProdutos.getSelectedRow(), 1);
                        jtProdutos.setValueAt(dados[2], jtProdutos.getSelectedRow(), 2);
                        JOptionPane.showMessageDialog(null, "Dados atualizados com sucesso!");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar adicionar o item.\n" + e.getMessage());
                    }
                }
            } else {
                DefaultTableModel dtmProdutos = (DefaultTableModel) jtProdutos.getModel();
                if (txtDescricao.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe uma descrição para o produto");
                    txtDescricao.requestFocus();
                } else if (txtQuantidade.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe a quantidade de " + txtDescricao.getText() + " a ser cadastrada.");
                    txtQuantidade.requestFocus();
                } else if (txtPreco.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Informe um preço para o produto");
                    txtPreco.requestFocus();
                } else {
                    Object[] dados = {
                        txtDescricao.getText(),
                        txtQuantidade.getText(),
                        txtPreco.getText()
                    };
                    try {
                        dtmProdutos.addRow(dados);
                        txtDescricao.setText(null);
                        txtQuantidade.setText(null);
                        txtPreco.setText(null);
                        txtDescricao.requestFocus();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar adicionar o item.\n" + e.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_txtPrecoKeyPressed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        btnExcluir.setEnabled(false);
        btnAtualizar.setEnabled(false);
        btnCancelar.setEnabled(false);
        txtDescricao.setText(null);
        txtQuantidade.setText(null);
        txtPreco.setText(null);
        jtProdutos.clearSelection();
        txtDescricao.requestFocus();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jtProdutosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProdutosMouseReleased
        Integer itemSelecionado = jtProdutos.getSelectedRow();

        if (itemSelecionado != -1) {
            btnExcluir.setEnabled(true);
            btnAtualizar.setEnabled(true);
            btnCancelar.setEnabled(true);
            txtDescricao.setText(jtProdutos.getValueAt(itemSelecionado, 0).toString());
            txtQuantidade.setText(jtProdutos.getValueAt(itemSelecionado, 1).toString());
            txtPreco.setText(jtProdutos.getValueAt(itemSelecionado, 2).toString());
        }
    }//GEN-LAST:event_jtProdutosMouseReleased

    private void jtProdutosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtProdutosKeyReleased
        Integer itemSelecionado = jtProdutos.getSelectedRow();

        if (itemSelecionado != -1) {
            btnExcluir.setEnabled(true);
            btnAtualizar.setEnabled(true);
            btnCancelar.setEnabled(true);
            txtDescricao.setText(jtProdutos.getValueAt(itemSelecionado, 0).toString());
            txtQuantidade.setText(jtProdutos.getValueAt(itemSelecionado, 1).toString());
            txtPreco.setText(jtProdutos.getValueAt(itemSelecionado, 2).toString());
        }
    }//GEN-LAST:event_jtProdutosKeyReleased

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        Integer itemSelecionado = jtProdutos.getSelectedRow();

        if (itemSelecionado != -1) {
            DefaultTableModel dtmProdutos = (DefaultTableModel) jtProdutos.getModel();
            if (txtDescricao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Informe uma descrição para o produto");
                txtDescricao.requestFocus();
            } else if (txtQuantidade.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Informe a quantidade de " + txtDescricao.getText() + " a ser cadastrada.");
                txtQuantidade.requestFocus();
            } else if (txtPreco.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Informe um preço para o produto");
                txtPreco.requestFocus();
            } else {
                Object[] dados = {
                    txtDescricao.getText(),
                    txtQuantidade.getText(),
                    txtPreco.getText()
                };
                try {
                    jtProdutos.setValueAt(dados[0], itemSelecionado, 0);
                    jtProdutos.setValueAt(dados[1], itemSelecionado, 1);
                    jtProdutos.setValueAt(dados[2], itemSelecionado, 2);
                    JOptionPane.showMessageDialog(null, "Dados atualizados com sucesso!");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar adicionar o item.\n" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroProduto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtProdutos;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
